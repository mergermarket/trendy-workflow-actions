name: trendy-workflow-actions/build

on:
  workflow_call:
    inputs:
      runs-on:
        required: false
        default: "ubuntu-latest"
        type: string
      runs-on-extra-tag1:
        required: false
        default: "ubuntu-latest"
        type: string
      runs-on-extra-tag2:
        required: false
        default: "ubuntu-latest"
        type: string
      branch-filtering-before-deployment:
        required: false
        default: true
        type: boolean
      notify-teams-environment-name:
        required: false
        default: "environment"
        type: string
      notify-teams-on-failure:
        required: false
        default: false
        type: boolean
      branch-name-for-filtering-deployment:
        required: false
        default: "refs/heads/main"
        type: string
      copy-platform-config:
        required: false
        default: true
        type: boolean
      create-npmrc:
        required: false
        default: true
        type: boolean
      create-jfrog-npmrc:
        required: false
        default: false
        type: boolean
      create-ion-analytics-npmrc:
        required: false
        default: false
        type: boolean
      setup-node:
        required: false
        default: true
        type: boolean
      setup-cdflow2:
        required: false
        default: false
        type: boolean
      configure-aws-region:
        required: false
        default: "eu-west-1"
        type: string
      copy-platform-config-src-bucket-prefix:
        required: false
        default: "s3://acuris-platform-config"
        type: string
      copy-platform-config-dest-path-prefix:
        required: false
        default: "./platform-config"
        type: string
      copy-platform-config-download-list-json:
        required: false
        default: "[]"
        type: string
      setup-node-version:
        required: false
        default: 20
        type: number
      before-deploy-commands-json:
        required: false
        default: "[]"
        type: string
      deploy-commands-json:
        required: false
        default: "[]"
        type: string
      after-deploy-commands-json:
        required: false
        default: "[]"
        type: string
      login-to-docker:
        required: false
        default: true
        type: boolean
      expose-github-runtime:
        required: false
        default: true
        type: boolean
      install-missing-commands:
        required: false
        default: false
        type: boolean
    secrets:
      MSTEAMS_WEBHOOK:
        required: false
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      NPM_ACCESS_TOKEN:
        required: true
      NPM_JFROG_TOKEN:
        required: false
      MONGODB_ATLAS_PUBLIC_KEY:
        required: false
      MONGODB_ATLAS_PRIVATE_KEY:
        required: false
      DOCKER_USERNAME:
        required: true
      DOCKER_PASSWORD:
        required: true

jobs:
  Deploy:
    runs-on:
      [
        "${{ inputs.runs-on }}",
        "${{ inputs.runs-on-extra-tag1 }}",
        "${{ inputs.runs-on-extra-tag2 }}",
      ]
    permissions:
      actions: read
      contents: read
    env:
      JOB_NAME: "deploy-${{ github.run_number }}-${{ github.sha }}"
      VERSION: ${{ github.run_number }}-${{ github.sha }}
      GITHUB_TOKEN: dummy-token
      NPM_ACCESS_TOKEN: "${{ secrets.NPM_ACCESS_TOKEN }}"
      MONGODB_ATLAS_PUBLIC_KEY: ${{ secrets.MONGODB_ATLAS_PUBLIC_KEY }}
      MONGODB_ATLAS_PRIVATE_KEY: ${{ secrets.MONGODB_ATLAS_PRIVATE_KEY }}
    if: ${{ !inputs.branch-filtering-before-deployment || github.ref == inputs.branch-name-for-filtering-deployment }}
    steps:
      - name: Print input paramters
        run: |
          echo 'inputs:'
          echo '${{toJSON(inputs)}}'
      - name: Install missing commands (self-hosted agents may need this)
        if: ${{ inputs.install-missing-commands }}
        uses: mergermarket/trendy-workflow-actions/.github/actions/install-missing-commands@main
      - name: Checkout main branch
        uses: actions/checkout@v4
      - name: Notify Teams
        uses: patrickpaulin/ms-teams-deploy-card@master
        if: ${{ inputs.notify-teams-on-failure }}
        with:
          github-token: ${{ github.token }} # Use built-in more restricted token
          webhook-uri: ${{ secrets.MSTEAMS_WEBHOOK }}
          card-layout-exit: complete
          show-on-start: false
          show-on-failure: true
          custom-facts: |
            - name: Deployment Environment
              value: '${{ inputs.notify-teams-environment-name }}'
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ inputs.configure-aws-region }}
      - name: Login to Docker
        if: ${{ inputs.login-to-docker }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Docker info
        if: ${{ inputs.login-to-docker }}
        run: |
          docker info
      - name: Expose GitHub Runtime
        if: ${{ inputs.expose-github-runtime }}
        uses: crazy-max/ghaction-github-runtime@v3
      - name: Copy platform-config from s3
        if: ${{ inputs.copy-platform-config }}
        run: |
          COPY_PLATFORM_CONFIG_INPUT_JSON='${{inputs.copy-platform-config-download-list-json}}'
          COPY_PLATFORM_CONFIG_INPUT_SRC=""
          COPY_PLATFORM_CONFIG_INPUT_DEST=""
          ACCOUNT_ITEM_STR=""
          for accountItem in $(echo $COPY_PLATFORM_CONFIG_INPUT_JSON | jq -c .[]);
          do
            ACCOUNT_ITEM_STR=$(echo $accountItem | sed -e 's/^"//' -e 's/"$//')
            COPY_PLATFORM_CONFIG_INPUT_SRC="${{inputs.copy-platform-config-src-bucket-prefix}}/$ACCOUNT_ITEM_STR/";
            COPY_PLATFORM_CONFIG_INPUT_DEST="${{inputs.copy-platform-config-dest-path-prefix}}/$ACCOUNT_ITEM_STR";
            echo "run: aws s3 sync $COPY_PLATFORM_CONFIG_INPUT_SRC $COPY_PLATFORM_CONFIG_INPUT_DEST";
            aws s3 sync $COPY_PLATFORM_CONFIG_INPUT_SRC $COPY_PLATFORM_CONFIG_INPUT_DEST;
          done
      - name: Create .npmrc
        if: ${{ inputs.create-npmrc }}
        run: |
          echo "@mergermarket:registry=https://npm.pkg.github.com" >> .npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.NPM_ACCESS_TOKEN }}" >> .npmrc
          echo "registry=https://registry.npmjs.org" >> .npmrc
      - name: Create ION Analytics .npmrc
        if: ${{ inputs.create-ion-analytics-npmrc }}
        run: |
          echo "@ion-analytics:registry=https://npm.pkg.github.com" >> .npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.NPM_ACCESS_TOKEN }}" >> .npmrc
          echo "registry=https://registry.npmjs.org" >> .npmrc
      - name: Create JFROG .npmrc
        if: ${{ inputs.create-jfrog-npmrc }}
        run: |
          echo "registry=https://mmrepo.jfrog.io/mmrepo/api/npm/npm-virtual/" >> .npmrc
          echo "username = jenkins-read-only" >> .npmrc
          echo "_password = ${{ secrets.NPM_JFROG_TOKEN }}" >> .npmrc
          echo "always-auth = true" >> .npmrc
      - name: Setup Node.js
        uses: actions/setup-node@v4
        if: ${{ inputs.setup-node }}
        with:
          node-version: ${{ inputs.setup-node-version }}
          cache: npm
      - name: Setup cdflow2
        uses: mergermarket/cdflow2-action@v6
        if: ${{ inputs.setup-cdflow2 }}
      - name: Run deploy commands
        uses: mergermarket/trendy-workflow-actions/.github/actions/run-all-commands@main
        with:
          github-token: ${{ secrets.NPM_ACCESS_TOKEN }}
          docker-username: ${{ secrets.DOCKER_USERNAME }}
          docker-password: ${{ secrets.DOCKER_PASSWORD }}
          pre-commands-json: ${{ inputs.before-deploy-commands-json }}
          commands-json: ${{ inputs.deploy-commands-json }}
          post-commands-json: ${{ inputs.after-deploy-commands-json }}
